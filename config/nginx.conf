user nginx;
worker_processes auto;
error_log /etc/nginx/error.log;
pid /run/nginx.pid;
events {
    worker_connections 1024;
}
http {

    # Set up rate limiting
    limit_req_zone $binary_remote_addr zone=addr:50m rate=1r/s;


    log_format main '$http_x_forwarded_for | $time_local | $status | $request | $http_user_agent';
    # $remote_addr

    # Setup logging
    access_log /etc/nginx/access.log main;
    access_log /dev/stdout main;

    server {
        listen 80;
        #server_name yourdomain.com;
        #root /path/to/your/website/root;
    
        # Server static files for website
        location / {
            limit_req zone=addr burst=10 nodelay;
            root   /usr/share/nginx/html;
            index  index.html;
        }

    
        # Block robots
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /\n";
        }

        # don't send the nginx version number in error pages and Server header
        server_tokens off;
        
        # config to don't allow the browser to render the page inside an frame or iframe
        # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
        # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
        # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
        add_header X-Frame-Options SAMEORIGIN;
        
        # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
        # to disable content-type sniffing on some browsers.
        # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
        # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
        # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
        # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
        add_header X-Content-Type-Options nosniff;
        
        # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
        # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
        # this particular website if it was disabled by the user.
        # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
        add_header X-XSS-Protection "1; mode=block";

    }
}
